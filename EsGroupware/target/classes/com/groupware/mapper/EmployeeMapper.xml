<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace:패키지명,클래스이름을 논리적으로 선언 -->
<mapper namespace="com.groupware.mapper.EmployeeMapper">


	<insert id="insertEmployee" parameterType="Employee">

		INSERT INTO employee
		(
		id,
		password,
		name,
		sex,
		home_number,
		phone_number,
		address,
		marital_status,
		email,
		postcode,
		direct_line,
		dept_no,
		position_no,
		ip_adress,
		extension,
		join_date,
 		birth_date
		)
		VALUES
		(
		#{id},
		#{password},
		#{name},
		#{sex},
		#{homeNumber},
		#{phoneNumber},
		#{address},
		#{maritalStatus},
		#{email},
		#{postcode},
		#{directLine},
		#{deptNo},
		#{positionNo},
 		#{ipAdress},
		#{extension},
		#{joinDate},
 		#{birthDate}
		)
	</insert>

	<insert id="insertDept" parameterType="Dept">

		INSERT INTO Dept

		(dept_no, partname)

		VALUES
		(deptno_sequence.nextval, #{partName})
	</insert>
	<insert id="insertPosition" parameterType="Position">
		INSERT INTO Position
		(
		position_no,
		position_name
		)
		VALUES
		(
		positionno_sequence.nextval,
		#{positionName}
		)
	</insert>



	<select id="getDeptList" resultType="Dept">
		SELECT dept_no deptNo,partname partName
		FROM dept
	</select>
	
<!-- 	<select id="getEmployeeList" resultType="Employee">
		SELECT id, name, dept_no deptNo, position_no positionNo, sex
		FROM employee
		WHERE deleted = 0
		ORDER BY dept_no DESC, position_no DESC
	</select> -->
	
	<select id="getEmployeeList" resultType="Employee" parameterType="hashMap" >
		SELECT id, name, dept_no deptNo, position_no positionNo, sex
		FROM employee
		WHERE deleted = 0
		ORDER BY 
		<choose>
			<when test='lineup == "id"'>
				id
			</when>
			<when test='lineup == "name"'>
				name
			</when>
			<when test='lineup == "dept"'>
				position_no DESC, dept_no 
			</when>
			<when test='lineup == "position"'>
				position_no
			</when>
		</choose>
		 ASC 
	</select>

	<select id="getPositionList" resultType="Position">
		SELECT position_no positionNo, position_name positionName
		FROM position
	</select>

	<select id="getEmployeeById" parameterType="String" resultType="Employee">
		SELECT id, password, name, sex, home_number homeNumber,phone_number
		phoneNumber, address, email,
		marital_status maritalStatus, postcode, direct_line directLine, dept_no deptNo,
		position_no positionNo, ip_adress ipAdress, extension,join_date
		joinDate, birth_date birthDatetype, birth_date birthDate
		FROM employee WHERE id = #{id}
	</select>


	<select id="getEmployeeByIdAndPasswd" parameterType="hashMap"
		resultType="Employee">
		SELECT id, name, dept_no deptNo, position_no positionNo, usertype userType
		FROM employee
		WHERE id = #{id} AND password = #{password} AND deleted = 0
	</select>
	<select id="getMemberCountById" parameterType="String"
		resultType="int">
		SELECT COUNT(id) FROM employee WHERE id = #{id}
	</select>


	<select id="getemList" resultMap="EmployeeResult">
		SELECT
			e.id, e.name, e.dept_no deptNo, e.position_no positionNo, e.sex, e.phone_number phoneNumber, e.join_date joinDatetype, p.position_name positionName
		FROM 
			employee e ,position p
		WHERE
			deleted = 0 AND e.position_no = p.position_no
		ORDER BY
			id ASC
	</select>

	<select id="getEmployeeInfomationList" parameterType="String"
		resultMap="EmployeeResult"> 
		SELECT id,name,sex,birth_date,phone_number,direct_line,join_date,email,address
		,position_no,dept_no
		FROM employee
		WHERE id=#{id}
	</select>

	<!-- <select id="getEmployeeList" resultType="Employee" > SELECT id, name, 
		dept_no, position_no, sex FROM employee WHERE deleted = 0 ORDER BY dept_no 
		DESC, position_no DESC </select> -->
	<update id="updateEmployee" parameterType="hashMap">
		UPDATE employee 
			set dept_no = #{deptNo}, position_no = #{positionNo}, name = #{name}, birth_date = #{birthdate}, sex = #{sex}
		WHERE id = #{id}
	</update>

	<update id="deleteEmployee" parameterType="String">
		UPDATE employee set deleted = '1' WHERE id = #{id}
	</update>
	
	<update id="shiftdeleteEmployee" parameterType="String">
		DELETE TABLE employee WHERE id = #{id}
	</update>
	
	<update id="returnEmployee" parameterType="String">
		UPDATE employee set deleted = '0' WHERE id = #{id}
	</update>
	
	<update id="deleteDept" parameterType="String">
		DELETE FROM dept WHERE dept_no = #{id}
	</update>
	<update id="deletePosition" parameterType="String">
		DELETE FROM position WHERE position_no = #{id}
	</update>

	<resultMap type="Employee" id="EmployeeResult">
		<id property="id" column="id" />
		<result property="deptNo" column="dept_no" />
		<result property="email" column="email" />
		<result property="name" column="name" />
		<result property="sex" column="sex" />
		<result property="birthDate" column="birth_date" />
		<result property="phoneNumber" column="phone_number" />
		<result property="directLine" column="direct_line" />
		<result property="joinDate" column="Join_Date" />
		<result property="email" column="email" />
		<result property="address" column="address" />
		<result property="positionNo" column="position_no" />
		
		<association property="dept" column="dept_no" select="selectDeptById" />
		<association property="position" column="position_no"
			select="selectPositionById" />

	</resultMap>


	<resultMap type="Dept" id="deptResult">
		<result property="deptNo" column="dept_no" />
		<result property="partName" column="partname" />
	</resultMap>

	<resultMap type="Position" id="PositionResult">
		<result property="positionNo" column="position_no" />
		<result property="positionName" column="position_name" />
	</resultMap>

	<select id="selectDeptById" resultMap="deptResult"
		parameterType="int">
		SELECT dept_no,partname FROM dept where dept_no=#{no}
	</select>

	<select id="selectPositionById" resultMap="PositionResult"
		parameterType="int">
		SELECT position_no, position_name FROM position where position_no =#{no}
	</select>
	
	<select id="searchDeptAdmin" resultType="Employee"
		parameterType="String">
		SELECT id, name FROM employee where dept_no =#{no} and usertype = 0
	</select>
	<select id="searchAdmin" resultType="Employee">
		SELECT id, name FROM employee WHERE deleted = 0 and usertype != 1 and usertype = 0
	</select>
	
	<update id="registerAdmin" parameterType="hashMap">
		UPDATE employee 
		set
		<choose>
			<when test='usertype == "8"'>
				usertype = 8
			</when>
			<when test='usertype == "1"'>
				usertype = 1
			</when>
		</choose> 
		WHERE id = #{id}
	</update>
	<update id="registerApprovalAdmin" parameterType="String">
		UPDATE employee 
		set
			usertype = 8
		WHERE id = #{id}
	</update>
	
	<select id="getAdminList" resultType="Employee"  parameterType="hashMap">
		SELECT id, name, position_no positionNo 
		FROM employee 
		where 
 		<choose>
			<when test='radio == "8"'>
			usertype = 8
			</when>
			<when test='radio == "1"'>
			usertype = 1
			</when>
		</choose>
	</select>
	
	<update id="deleteApprovalAdmin" parameterType="String">
		UPDATE employee set usertype = 0 WHERE id = #{id}
	</update>
	
	<select id="searchSelectAdmin" resultType="Employee"  parameterType="hashMap" >
		SELECT id, name 
		FROM employee 
		WHERE deleted = 0 		
		<choose>
			<when test='radio == "8"'>
			and usertype != 8 and usertype = 0
			</when>
			<when test='radio == "1"'>
			and usertype != 1 and usertype = 0
			</when>
		</choose>
	</select>
	<select id="getEmployeeCount" parameterType="String" resultType="int">
 	SELECT 
 	COUNT (id)
 	FROM 
 		employee
 	WHERE
 		deleted = 0
 	</select>
 	<select id="getDeletedEmployeeCount" parameterType="String" resultType="int">
 	SELECT 
 	COUNT (id)
 	FROM 
 		employee
 	WHERE
 		deleted = 1
 	</select>
 	
 	<select id="getEmployeeList2" resultType="Employee" parameterType="hashMap" >
		SELECT id, name, dept_no deptNo, position_no positionNo, sex, phone_number phoneNumber, join_date joinDatetype
		FROM 
 		(
 			SELECT 
 				rownum idx, s.*
 			FROM (
 				SELECT 
 					id, name, dept_no, position_no, sex, phone_number, join_date, deleted
				FROM 
					employee
				ORDER BY
				<choose>
					<when test="lineup == 'id'">
						id 
					</when>
					<when test='lineup == "name"'>
						name 
					</when>
					<when test='lineup == "dept"'>
						dept_no 
					</when>
					<when test='lineup == "position"'>
						position_no 
					</when>
					<when test='lineup == "joindate"'>
						join_date  
					</when>
				</choose>
				<choose>
					<when test="sort == 'ASC'">
						ASC
					</when>
					<when test="sort == 'DESC'">
						DESC
					</when>
				</choose>
 				)s
 		)
	 	WHERE
	 		idx &gt;= #{ first } AND idx &lt; #{ last } AND deleted = 0
	</select>
	
	<select id="getEmployeeDeleteList" resultType="Employee" parameterType="hashMap" >
		SELECT id, name, dept_no deptNo, position_no positionNo, sex, phone_number phoneNumber, join_date joinDatetype
		FROM 
 		(
 			SELECT 
 				rownum idx, s.*
 			FROM (
 				SELECT 
 					id, name, dept_no, position_no, sex, phone_number, join_date, deleted
				FROM 
					employee
				ORDER BY
				<choose>
					<when test="lineup == 'id'">
						id 
					</when>
					<when test='lineup == "name"'>
						name 
					</when>
					<when test='lineup == "dept"'>
						dept_no 
					</when>
					<when test='lineup == "position"'>
						position_no 
					</when>
					<when test='lineup == "joindate"'>
						join_date  
					</when>
				</choose>
				<choose>
					<when test="sort == 'ASC'">
						ASC
					</when>
					<when test="sort == 'DESC'">
						DESC
					</when>
				</choose>
 				)s
 		)
	 	WHERE
	 		idx &gt;= #{ first } AND idx &lt; #{ last } AND deleted = 1
	</select>
	
	<insert id="insertUpload" parameterType="hashMap">
		INSERT INTO upload
		(uploadno, title, uploader, content)
		VALUES (upload_sequence.nextVal, #{title}, #{uploader}, #{content})
	</insert>
	
	<insert id="insertUploadFile" parameterType="hashMap">
		INSERT INTO uploadfile
		(uploadfileno, uploadno, savedfilename, userfilename)
		VALUES (uploadfile_sequence.nextVal, #{uploadno}, #{savedfilename}, #{userfilename})
	</insert>
	
	<select id="menulist" resultType="Menu">
		SELECT menuno, name, use, image FROM menu
	</select>
	
	<update id="menuable" parameterType="String">
		UPDATE menu set use = 1 WHERE menuno = #{menuno}
	</update>
	<update id="menudisable" parameterType="String">
		UPDATE menu set use = 0 WHERE menuno = #{menuno}
	</update>
	
	<insert id="insertLog" parameterType="hashMap">
		INSERT INTO log
		(logno, id, dept, name, ip, logdate)
		VALUES (log_sequence.nextVal, #{id}, #{dept}, #{name}, #{ip}, #{logdate})
	</insert>
	
	<select id="getlogCount" parameterType="String" resultType="int">
 	SELECT 
 	COUNT (logno)
 	FROM 
 		log
 	</select>
 	
	<select id="loglist" resultType="Log" parameterType="hashMap" >
		SELECT logno, id, dept, name, ip, logdate 
		FROM 
 		(
 			SELECT 
 				rownum idx, s.*
 			FROM (
 				SELECT 
 					logno, id, dept, name, ip, logdate
				FROM 
					log
				ORDER BY 
					logno
				DESC 
 				)s		
 		)
	 	WHERE
	 		idx &gt;= #{ first } AND idx &lt; #{ last } 			
	</select>
	
	<select id="logalllist" resultType="Log" parameterType="hashMap" >
		SELECT logno, id, dept, name, ip, logdate 
		FROM log
		ORDER By logno DESC
	</select>

	<select id="AllAdminSearch" resultType="Employee">
		SELECT id, name, phone_number phoneNumber FROM employee where <!-- usertype = 1 -->id='admin' AND deleted = 0
	</select>
	
	<select id="logAllcount" resultType="int" parameterType="String" >
		SELECT 
			COUNT(id)
		FROM log
		WHERE id = #{id}
	</select>
	
	<select id="logMonthcount" resultType="int" parameterType="hashMap" >
		SELECT COUNT(id)
		FROM log
		WHERE TO_CHAR(logdate, 'yy/MM') = #{month} AND id = #{id}
	</select>
	
	
</mapper>                                                                                 