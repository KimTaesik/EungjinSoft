<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace:패키지명,클래스이름을 논리적으로 선언 -->
<mapper namespace="com.groupware.mapper.AddressBookMapper">

	
	<insert id="insertAddressBook" parameterType="AddressBook">

		INSERT INTO addressbook
		(
		addressno, id, name, email, phone_number, home_number, groupno,
		fax, nation ,classify)
		VALUES(
		addressno_sequence.nextval, #{id}, #{name}, #{email}, #{phoneNumber}, #{homeNumber}, #{groupNo}, #{fax}, #{nation}, #{classify})
	</insert>
	
	 
	<!--  	페이징 처리 [목록 조회] -->
	<select id="getAddressbookList2" parameterType="hashMap" resultType="AddressBook">
	SELECT
	addressno, id, name, groupno, classify, email, phone_number phoneNumber, home_number homeNumber, fax
	FROM
		(	
			SELECT
				rownum idx, s.*
			FROM (
				SELECT
					addressno, id, name, groupno, classify, email, phone_number , home_number, fax
			FROM 
				addressbook
			WHERE classify = #{ classify }
			ORDER BY 
				addressno DESC
			)s
		)
	WHERE
		idx	&gt; =  #{ first } AND idx &lt; #{ last }
	</select> 
	
	<!--  	주소록 전체 목록 수 조회하는 작업  -->
	<select id="getAddressBookCount" parameterType="String" resultType="int">
 	SELECT 
 	COUNT (addressno)
 	FROM 
 		addressbook
 	WHERE classify = #{ classify }
 	</select>
 	
	<!--  목록 조회하기  -->
	<!-- <select id="getAddressbookList" parameterType="String" resultType="AddressBook">
	SELECT
	addressno, id, name, groupno, classify, email, phone_number phoneNumber, home_number homeNumber, fax
	FROM
	addressbook
	WHERE classify = #{ classify }
	ORDER BY 
	addressno DESC
	</select> -->
	
 	<!-- 주소록 수정  --> 
  	<update id="editAddress" parameterType="hashMap">
 	UPDATE 
 		addressbook
 	SET email = #{ email }, phone_number = #{phoneNumber}, home_number = #{homeNumber}, fax = #{fax},
 	 	nation = #{ nation }, address = #{ address }, company_name = #{ companyName }, department_name = #{ deptName },
 	 	position_name = #{ positionName }, company_number = #{ companyNumber }, company_address = #{ companyAddress },
 	 	memo = #{ memo }
 	WHERE addressno = #{ addressNo } and classify = #{ classify }
 	</update> 
 
 	<!-- 주소록 수정 시, 기본 값(이름, 이메일, 휴대폰, 전화번호)을 DB에서 가져오게 하는 부분 -->
 	<select id="selectAddress" parameterType="String" resultType="AddressBook" >
 	SELECT
 		name, email, phone_number, home_number, fax
 	FROM 
 		addressbook
 	WHERE addressno = #{ addressNo } 
 	</select>
 	
 	<!-- 주소록 삭제-->
 	<delete id="deleteAddress" parameterType="hashMap" >
 	DELETE from 
 		addressbook 
 	WHERE addressno = #{ addressNo } and classify = #{ classify }
 	</delete>
	


</mapper>                                                                                 